<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis-org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="repository.mapper.proReviewMapper">
<cache></cache>

<!--프로그램리뷰 업데이트 -->
<update id="updateProReview" parameterType="ProReview">
	update pro_review
	set	PRO_REVIEW_TITLE = #{proReviewTitle},
		PRO_REVIEW_SCORE = #{proReviewScore},
		PRO_REVIEW_COMMENT = #{proReviewComment},
		PRO_REVIEW_ORIGINAL = #{proReviewOriginal},
		PRO_REVIEW_STORED = #{proReviewStored},
		PRO_REVIEW_REGDATE = #{proReviewRegdate}
	where PRO_REVIEW_NO = #{proReviewNo}

</update>

<!--조건없는셀렉트  -->
<select id="selectProReviewAllList" resultMap="proReviewMap">

 select PRO_REVIEW_NO, MEMBER_EMAIL, PRO_NO, COACH_EMAIL, PRO_REVIEW_TITLE, PRO_REVIEW_SCORE,
 PRO_REVIEW_COMMENT, PRO_REVIEW_SIZE, PRO_REVIEW_ORIGINAL, PRO_REVIEW_STORED, PRO_REVIEW_REGDATE
 from pro_review
 
</select>



<resultMap type="ProReview" id="proReviewMap">
			<id property="proReviewNo" column="PRO_REVIEW_NO" jdbcType="BIGINT"  />
			<id property="memberEmail" column="MEMBER_EMAIL" jdbcType="VARCHAR"  />
			<id property="proNo" column="PRO_NO" jdbcType="BIGINT"  />
			<id property="coachEmail" column="COACH_EMAIL" jdbcType="VARCHAR"  />
			<result property="proReviewTitle" column="PRO_REVIEW_TITLE" jdbcType="VARCHAR"  />
			<result property="proReviewScore" column="PRO_REVIEW_SCORE" jdbcType="VARCHAR"/>			
			<result property="proReviewComment"  column="PRO_REVIEW_COMMENT" jdbcType="VARCHAR"  />						
			<result property="proReviewSize" column="PRO_REVIEW_SIZE" jdbcType="BIGINT"/>
			<result property="proReviewOriginal" column="PRO_REVIEW_ORIGINAL" jdbcType="VARCHAR"/>
			<result property="proReviewStored" column="PRO_REVIEW_STORED" jdbcType="VARCHAR"/>
			<result property="proReviewRegdate" column="PRO_REVIEW_REGDATE" jdbcType="DATE"/>
	
		
</resultMap>

<!-- 리뷰출력 -->
<select id="selectProReviewListByProNo" parameterType="int" resultMap="proReviewMap">
 select PRO_REVIEW_NO, MEMBER_EMAIL, PRO_NO, COACH_EMAIL, PRO_REVIEW_TITLE, PRO_REVIEW_SCORE,
 PRO_REVIEW_COMMENT, PRO_REVIEW_SIZE, PRO_REVIEW_ORIGINAL, PRO_REVIEW_STORED, PRO_REVIEW_REGDATE
 from pro_review
 where PRO_NO = #{proNo}
</select>

<!--리뷰등록  -->
<insert id="insertProReview" parameterType="ProReview">
	insert into pro_review
	(PRO_REVIEW_NO, MEMBER_EMAIL, PRO_NO, COACH_EMAIL, PRO_REVIEW_TITLE, PRO_REVIEW_SCORE,
	PRO_REVIEW_COMMENT, PRO_REVIEW_SIZE, PRO_REVIEW_ORIGINAL, PRO_REVIEW_STORED, PRO_REVIEW_REGDATE)
	values
	(COUNT_NUMBER.NEXTVAL, #{memberEmail}, #{proNo}, #{coachEmail}, #{proReviewTitle},
	 #{proReviewScore}, #{proReviewComment}, #{proReviewSize}, #{proReviewOriginal},
	  #{proReviewStored}, #{proReviewRegdate})
</insert>


</mapper>